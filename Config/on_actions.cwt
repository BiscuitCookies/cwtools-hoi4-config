types = {
	type[on_action] = {
	path = "game/common/on_actions"
	}
	## starts_with = on_daily_
	type[on_action_daily] = {
		path = "game/common/on_actions"
		skip_root_key = on_actions
		starts_with = "on_daily_"
	}
	## starts_with = on_weekly_
	type[on_action_weekly] = {
		path = "game/common/on_actions"
		skip_root_key = on_actions
		starts_with = "on_weekly_"
	}
	## starts_with = on_monthly_
	type[on_action_monthly] = {
		path = "game/common/on_actions"
		skip_root_key = on_actions
		starts_with = "on_monthly_"
	}
}

## replace_scope = { THIS = country ROOT = country }
on_action_daily = {
	### Triggered daily for the specified country. Tag isn't checked for validity
	## replace_scope = { THIS = country ROOT = country }
	## cardinality = 0..inf
	effect = {
		alias_name[effect] = alias_match_left[effect]
	}
}

## replace_scope = { THIS = country ROOT = country }
on_action_weekly = {
	### Triggered weekly for the specified country. Tag isn't checked for validity
	## cardinality = 1..inf
	## replace_scope = { THIS = country ROOT = country }
	## cardinality = 0..inf
	random_events = {
		## cardinality = 0..inf
		int = 0
		## cardinality = 0..inf
		int = <event.country_event>
	}
	## replace_scope = { THIS = country ROOT = country }
	## cardinality = 0..1
	effect = {
		alias_name[effect] = alias_match_left[effect]
	}
}

## replace_scope = { THIS = country ROOT = country }
on_action_monthly = {
	### Triggered monthly for the specified country. Tag isn't checked for validity
	## cardinality = 1..inf
	## replace_scope = { THIS = country ROOT = country }
	## cardinality = 0..inf
	random_events = {
		## cardinality = 0..inf
		int = 0
		## cardinality = 0..inf
		int = <event.country_event>
	}
	## replace_scope = { THIS = country ROOT = country }
	## cardinality = 0..1
	effect = {
		alias_name[effect] = alias_match_left[effect]
	}
}

on_action = {

	### Triggered daily for the specified country. Tag isn't checked for validity
	## replace_scope = { THIS = country ROOT = country }
	## cardinality = 0..inf
	<on_action_daily> = single_alias_right[on_action_effect]

	### Triggered weekly for the specified country. Tag isn't checked for validity
	## replace_scope = { THIS = country ROOT = country }
	## cardinality = 0..inf
	<on_action_weekly> = single_alias_right[on_action_effect]

	### Triggered monthly for the specified country. Tag isn't checked for validity
	## replace_scope = { THIS = country ROOT = country }
	## cardinality = 0..inf
	<on_action_monthly> = single_alias_right[on_action_effect]

	### Trigger the following commands whenever an election happens or is called by the hold_election command.
	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country }
	on_new_term_election = single_alias_right[country_event_effect]

	### Trigger the following commands whenever an ace is created. FROM = Ace
	## cardinality = 0..inf
	## replace_scope = { THIS = country root = country FROM = any }
	on_ace_promoted = single_alias_right[country_event_effect]

	### Trigger the following commands whenever two aces kill each other in air duel. FROM = our ace, PREV = enemy ace, has killed FROM.
	## cardinality = 0..inf
	## replace_scope = { THIS = country root = country FROM = any prev = any }
	on_aces_killed_each_other = single_alias_right[country_event_effect]

	### Trigger the following commands whenever an aces is killed by another ace. FROM = our ace, PREV = enemy ace, has killed FROM.
	## cardinality = 0..inf
	## replace_scope = { THIS = country root = country FROM = any prev = any }
	on_ace_killed_by_ace = single_alias_right[country_event_effect]

	### Trigger the following commands whenever an aces is killed by another ace (surviving ace side). FROM = our ace, PREV = enemy ace, killed by FROM.
	## cardinality = 0..inf
	## replace_scope = { THIS = country root = country FROM = any prev = any }
	on_ace_killed_other_ace = single_alias_right[country_event_effect]

	### Trigger the following commands whenever an aces is killed. FROM = ace
	## cardinality = 0..inf
	## replace_scope = { THIS = country root = country FROM = any }
	on_ace_killed = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country root = country FROM = any }
	on_ace_killed_on_accident = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country root = country FROM = any }
	on_non_ace_killed_other_ace = single_alias_right[country_event_effect]

	### Trigger the following commands whenever the country is targeted by a wargoal under justification. FROM = target nation. Checked every day.
	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_justifying_wargoal_pulse = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_wargoal_expire = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = state }
	on_nuke_drop = single_alias_right[country_event_effect]

	### Trigger the following commands whenever a country loses a border war. "Border war" refers to the state-based border wars enabled with set_border_war, represented with orange stripes over the state, rather than border wars that simulate combat between countries. The default scope is the state that lost the border war.
	## cardinality = 0..inf
	## replace_scope = { THIS = state ROOT = country }
	on_border_war_lost = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country }
	on_leave_faction = single_alias_right[country_event_effect]

	### Trigger the following commands whenever a country create a faction. FROM is the one that joins the faction.
	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country from = country }
	on_create_faction = single_alias_right[country_event_effect]

	### Trigger the following commands whenever a country joins a faction after being invited. FROM is the country invited, THIS and ROOT are the faction leader.
	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_offer_join_faction = single_alias_right[country_event_effect]

	### Trigger the following commands for a faction leader whenever a country joins after they ask to do so. FROM is faction leader, ROOT and THIS are the country that joins.
	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_join_faction = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_declare_war = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country }
	on_faction_formed = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_capitulation = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_capitulation_immediate = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country }
	on_uncapitulation = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country }
	on_government_change = single_alias_right[country_event_effect]

	### Triggers the following commands whenever a sea invasion is made. THIS (default scope) is the invaded state, ROOT is the country that invades, FROM is the state where the invasion started
	## cardinality = 0..inf
	## replace_scope = { THIS = state ROOT = country FROM = state }
	on_naval_invasion = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country }
	on_coup_succeeded = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_civil_war_end = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_puppet = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_release_as_puppet = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_annex = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_subject_free = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_subject_autonomy_level_change = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_subject_annexed = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_release_as_free = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_peaceconference_ended = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_generate_wargoal = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_guarantee = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_military_access = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_offer_military_access = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_call_allies = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_join_allies = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_lend_lease = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_incoming_lend_lease = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_incoming_lend_lease = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_send_volunteers = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_send_expeditionary_force = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_return_expeditionary_forces = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_request_expeditionary_forces = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_ask_for_state_control = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_give_state_control = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_war_relation_added = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_liberate = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = invalid ROOT = invalid from = invalid }
	on_startup = {
		## cardinality = 0..1
		random_events = {
			## cardinality = 0..inf
			int = 0
			## cardinality = 0..inf
			int = <event>
		}
		## cardinality = 0..1
		effect = {
			alias_name[effect] = alias_match_left[effect]
		}
	}

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country }
	on_daily = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country }
	on_weekly = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country }
	on_monthly = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	on_yearly = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	on_thri_yearly_pulse = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	on_bi_yearly_pulse = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { ROOT = country THIS = country FROM = country FROMFROM = state }
	on_state_control_changed = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = unit_leader ROOT = unit_leader from = country }
	on_unit_leader_created = {
		## cardinality = 0..1
		random_events = {
			## cardinality = 0..inf
			int = 0
			## cardinality = 0..inf
			int = <event.unit_leader_event>
		}
		## cardinality = 0..1
		effect = {
			alias_name[effect] = alias_match_left[effect]
		}
	}

	## cardinality = 0..inf
	## replace_scope = { THIS = unit_leader ROOT = unit_leader from = country }
	on_unit_leader_level_up = {
		## cardinality = 0..1
		random_events = {
			## cardinality = 0..inf
			int = 0
			## cardinality = 0..inf
			int = <event.unit_leader_event>
		}
		## cardinality = 0..1
		effect = {
			alias_name[effect] = alias_match_left[effect]
		}
	}

	## cardinality = 0..inf
	## replace_scope = { THIS = unit_leader ROOT = unit_leader FROM = country }
	on_army_leader_daily = {
		## cardinality = 0..1
		random_events = {
			## cardinality = 0..inf
			int = 0
			## cardinality = 0..inf
			int = <event.unit_leader_event>
		}
		## cardinality = 0..1
		effect = {
			alias_name[effect] = alias_match_left[effect]
		}
	}

	## cardinality = 0..inf
	## replace_scope = { THIS = unit_leader ROOT = unit_leader FROM = country }
	on_army_leader_won_combat = {
		## cardinality = 0..1
		random_events = {
			## cardinality = 0..inf
			int = 0
			## cardinality = 0..inf
			int = <event.unit_leader_event>
		}
		## cardinality = 0..1
		effect = {
			alias_name[effect] = alias_match_left[effect]
		}
	}

	## cardinality = 0..inf
	## replace_scope = { THIS = unit_leader ROOT = unit_leader FROM = country }
	on_army_leader_lost_combat = {
		## cardinality = 0..1
		random_events = {
			## cardinality = 0..inf
			int = 0
			## cardinality = 0..inf
			int = <event.unit_leader_event>
		}
		## cardinality = 0..1
		effect = {
			alias_name[effect] = alias_match_left[effect]
		}
	}

	## cardinality = 0..inf
	## replace_scope = { THIS = unit_leader ROOT = unit_leader from = country }
	on_army_leader_promoted = {
		## cardinality = 0..1
		random_events = {
			## cardinality = 0..inf
			int = 0
			## cardinality = 0..inf
			int = <event.unit_leader_event>
		}
		## cardinality = 0..1
		effect = {
			alias_name[effect] = alias_match_left[effect]
		}
	}

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country FROMFROM = country }
	on_host_changed_from_capitulation = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country FROMFROM = country }
	on_exile_government_reinstated = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_civil_war_end_before_annexation = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country }
	on_government_exiled = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_pride_of_the_fleet_sunk = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_assume_faction_leadership = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_war = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_peace = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_peace_proposal = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = operative ROOT = country FROM = country }
	on_operative_on_mission_spotted = {
		## cardinality = 0..1
		random_events = {
			## cardinality = 0..inf
			int = 0
			## cardinality = 0..inf
			int = <event.operative_leader_event>
		}
		## cardinality = 0..1
		effect = {
			alias_name[effect] = alias_match_left[effect]
		}
	}

	## cardinality = 0..inf
	## replace_scope = { THIS = operative ROOT = country FROM = country }
	on_operative_captured = {
		## cardinality = 0..1
		random_events = {
			## cardinality = 0..inf
			int = 0
			## cardinality = 0..inf
			int = <event.operative_leader_event>
		}
		## cardinality = 0..1
		effect = {
			alias_name[effect] = alias_match_left[effect]
		}
	}

	## cardinality = 0..inf
	## replace_scope = { THIS = operative ROOT = country FROM = country }
	on_operative_death = {
		## cardinality = 0..1
		random_events = {
			## cardinality = 0..inf
			int = 0
			## cardinality = 0..inf
			int = <event.operative_leader_event>
		}
		## cardinality = 0..1
		effect = {
			alias_name[effect] = alias_match_left[effect]
		}
	}

	## cardinality = 0..inf
	## replace_scope = { THIS = operative ROOT = country FROM = country FROMFROM = state }
	on_operative_detected_during_operation = {
		## cardinality = 0..1
		random_events = {
			## cardinality = 0..inf
			int = 0
			## cardinality = 0..inf
			int = <event.operative_leader_event>
		}
		## cardinality = 0..1
		effect = {
			alias_name[effect] = alias_match_left[effect]
		}
	}

	## cardinality = 0..inf
	## replace_scope = { THIS = operative ROOT = operative FROM = country }
	on_operative_created = {
		## cardinality = 0..1
		random_events = {
			## cardinality = 0..inf
			int = 0
			## cardinality = 0..inf
			int = <event.operative_leader_event>
		}
		## cardinality = 0..1
		effect = {
			alias_name[effect] = alias_match_left[effect]
		}
	}

	## cardinality = 0..inf
	## replace_scope = { THIS = operative ROOT = operative FROM = country }
	on_operative_recruited = {
		## cardinality = 0..1
		random_events = {
			## cardinality = 0..inf
			int = 0
			## cardinality = 0..inf
			int = <event.operative_leader_event>
		}
		## cardinality = 0..1
		effect = {
			alias_name[effect] = alias_match_left[effect]
		}
	}

	## cardinality = 0..inf
	## replace_scope = { THIS = operative ROOT = country FROM = country }
	on_operation_completed = {
		## cardinality = 0..1
		random_events = {
			## cardinality = 0..inf
			int = 0
			## cardinality = 0..inf
			int = <event.operative_leader_event>
		}
		## cardinality = 0..1
		effect = {
			alias_name[effect] = alias_match_left[effect]
		}
	}

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_fully_decrypted_cipher = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_activated_active_decryption_bonuses = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = state ROOT = country FROM = country }
	on_units_paradropped_in_state = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = state ROOT = country FROM = state }
	on_paradrop = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country }
	on_ruling_party_change = single_alias_right[country_event_effect]
	
	## cardinality = 0..inf
	on_stage_coup = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { ROOT = country FROM = country }
	on_peaceconference_started = single_alias_right[on_action_effect]

	## cardinality = 0..inf
	## replace_scope = { ROOT = unit_leader from = unit }
	on_unit_leader_promote_from_ranks_veteran = single_alias_right[on_action_effect]

	## cardinality = 0..inf
	## replace_scope = { ROOT = unit_leader from = unit }
	on_unit_leader_promote_from_ranks_green = single_alias_right[on_action_effect]

	## cardinality = 0..inf
	## replace_scope = { ROOT = unit }
	on_add_history = single_alias_right[on_action_effect]

	### Triggers actions on an attache being sent. Default scope is sender, FROM = receiver
	## cardinality = 0..inf
	## replace_scope = { ROOT = country THIS = country FROM = country }
	on_send_attache = single_alias_right[country_event_effect]

	## cardinality = 0..inf
	## replace_scope = { ROOT = state THIS = state FROM = country }
	on_units_paradropped_in_state = single_alias_right[on_action_effect]

	# NB : all the following also exist at MIO level
	# use on-action here if the purpose is to execute for any MIO
	# use on-action at MIO level to execute just for one precise MIO
	# i.e. don't use this here : if = { limit = { is_military_industrial_organisation = ... } } }

	## cardinality = 0..inf
	## replace_scope = { this = military_industrial_organization }
	on_mio_size_increased = single_alias_right[on_action_effect]

	## cardinality = 0..inf
	## replace_scope = { this = military_industrial_organization }
	on_mio_design_team_assigned_to_tech = single_alias_right[on_action_effect]

	## cardinality = 0..inf
	## replace_scope = { this = military_industrial_organization }
	on_mio_design_team_assigned_to_variant = single_alias_right[on_action_effect]

	## cardinality = 0..inf
	## replace_scope = { this = military_industrial_organization }
	on_mio_industrial_manufacturer_assigned = single_alias_right[on_action_effect]

	## cardinality = 0..inf
	## replace_scope = { this = military_industrial_organization }
	on_mio_tech_research_cancelled = single_alias_right[on_action_effect]

	## cardinality = 0..inf
	## replace_scope = { this = military_industrial_organization }
	on_mio_tech_research_completed = single_alias_right[on_action_effect]

	## cardinality = 0..inf
	## replace_scope = { this = military_industrial_organization }
	on_mio_industrial_manufacturer_unassigned = single_alias_right[on_action_effect]

	### ROOT is winner #FROM gets annexed - This fires just before FROM gets annexed, meaning the country and everything it owns still exists. It will also fire on_annex and on_civil_war_end
	## cardinality = 0..inf
	## replace_scope = { THIS = country ROOT = country FROM = country }
	on_civil_war_end_before_annexation = single_alias_right[on_action_effect]	
}

single_alias[country_event_effect] = {
	## cardinality = 0..inf
	random_events = {
		## cardinality = 0..inf
		int = 0
		## cardinality = 0..inf
		int = <event.country_event>
	}
	## cardinality = 0..1
	effect = {
		alias_name[effect] = alias_match_left[effect]
	}
}
single_alias[on_action_effect] = {
	## cardinality = 0..1
	effect = {
		alias_name[effect] = alias_match_left[effect]
	}
}